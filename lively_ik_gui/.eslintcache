[{"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js":"1","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js":"2","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js":"3","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js":"4","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js":"5","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Commander.js":"6","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js":"7","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Initial.js":"8","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Joints.js":"9","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objectives.js":"10","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Misc.js":"11","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objects.js":"12","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js":"13","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basic.js":"14","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Preprocessing.js":"15","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js":"16","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js":"17","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js":"18","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js":"19","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js":"20"},{"size":503,"mtime":1610411495390,"results":"21","hashOfConfig":"22"},{"size":6314,"mtime":1611591746512,"results":"23","hashOfConfig":"22"},{"size":5086,"mtime":1598475880574,"results":"24","hashOfConfig":"22"},{"size":1116,"mtime":1607876457510,"results":"25","hashOfConfig":"22"},{"size":5449,"mtime":1611872450736,"results":"26","hashOfConfig":"22"},{"size":278,"mtime":1610653765965,"results":"27","hashOfConfig":"22"},{"size":2297,"mtime":1611888136005,"results":"28","hashOfConfig":"22"},{"size":1728,"mtime":1599064167038,"results":"29","hashOfConfig":"22"},{"size":3068,"mtime":1599436214278,"results":"30","hashOfConfig":"22"},{"size":10934,"mtime":1600803391517,"results":"31","hashOfConfig":"22"},{"size":1448,"mtime":1599778802664,"results":"32","hashOfConfig":"22"},{"size":22174,"mtime":1599778557060,"results":"33","hashOfConfig":"22"},{"size":2855,"mtime":1611600972510,"results":"34","hashOfConfig":"22"},{"size":1343,"mtime":1599668595952,"results":"35","hashOfConfig":"22"},{"size":1837,"mtime":1599860973945,"results":"36","hashOfConfig":"22"},{"size":2511,"mtime":1611588790575,"results":"37","hashOfConfig":"22"},{"size":663,"mtime":1611528524159,"results":"38","hashOfConfig":"22"},{"size":6012,"mtime":1611589829479,"results":"39","hashOfConfig":"22"},{"size":10353,"mtime":1611872638527,"results":"40","hashOfConfig":"22"},{"size":1730,"mtime":1611887155252,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"he0m22",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/index.js",[],["89","90"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/App.js",["91","92"],"import React from 'react';\nimport {SettingFilled} from '@ant-design/icons';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Connection from './components/Connection';\n// import ConfigCreator from './components/ConfigCreator';\n// import Commander from './components/Commander';\nimport Scene from './components/Scene';\nimport Uploader from './components/Uploader';\nimport Main from './components/Main';\nimport { message, Layout, Empty, Card, Space } from 'antd';\nimport * as ROSLIB from 'roslib';\nimport SplitPane from 'react-split-pane';\n// import {Resizable} from 're-resizable';\nconst { Header, Sider, Content } = Layout;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {host:'localhost:9090',\n                  prefix:'ws',\n                  connected:false,\n                  sidebarCollapsed: true,\n                  showUploader:false,\n                  config:{\n                    axis_types:[],\n                    ee_fixed_joints:[],\n                    base_link_motion_bounds:[[0,0],[0,0],[0,0]],\n                    static_environment:{\n                      cuboids:[],\n                      spheres:[],\n                      pcs:[]\n                    },\n                    fixed_frame:'',\n                    goals:[],\n                    joint_limits:[],\n                    joint_names:[],\n                    joint_ordering:[],\n                    joint_types:[],\n                    mode_control:'absolute',\n                    mode_environment:'ECAA',\n                    nn_jointpoint:[],\n                    nn_main:[],\n                    objectives:[],\n                    states:[],\n                    robot_link_radius:0.05,\n                    rot_offsets:[],\n                    starting_config:[],\n                    urdf:'<?xml version=\"1.0\" ?><robot name=\"default\" xmlns:xacro=\"http://www.ros.org/wiki/xacro\"><link name=\"base_link\"/><joint name=\"default_joint\" type=\"fixed\"><parent link=\"base_link\" /><child link=\"default_link\" /><origin xyz=\"0 0 0\" rpy=\"0 0 0\" /></joint><link name=\"default_link\"/></robot>',\n                    velocity_limits:[],\n                    disp_offsets:[],\n                    displacements:[]\n                  },\n                  meta:{\n                    valid_urdf: false,\n                    valid_robot: false,\n                    valid_nn: false,\n                    valid_config: false,\n                    valid_solver: false,\n                    displayed_state:[],\n                    links: [],\n                    dynamic_joints: [],\n                    fixed_joints: []\n                  }\n                 };\n  }\n\n  componentDidMount() {\n    let login = JSON.parse(localStorage.getItem('login')) || {host:'localhost:9090',prefix:'ws'};\n    this.ros = new ROSLIB.Ros();\n    this.ros.on('error', ()=>{\n      // There was an error connecting to the ROS socket.\n      message.error(\"Could not connect!\");\n      this.setState({connected:false})\n    })\n    this.ros.on('connection', ()=>{\n      // We successfully connected to the ROS socket.\n      console.log(\"Connection!\")\n      message.info(\"Connected!\");\n      localStorage.setItem('login',JSON.stringify({host:login.host,prefix:login.prefix}));\n      this.setState({connected:true,showUploader:true});\n\n      // Create Subscriber and Publisher\n      this.serverUpdate = new ROSLIB.Topic({\n        ros: this.ros,\n        name: '/lively_ik/server_updates',\n        messageType: 'std_msgs/String'\n      });\n\n      this.serverUpdate.subscribe(message => {\n        this.updateFromServer(message.data);\n      });\n\n      this.guiUpdate = new ROSLIB.Topic({\n        ros: this.ros,\n        name: '/lively_ik/gui_updates',\n        messageType: 'std_msgs/String'\n      })\n\n    })\n    this.ros.on('close', ()=>{\n      // We successfully closed our connection to the ROS socket.\n      console.log(\"Connection Closed\")\n      this.setState({connected:false})\n    })\n\n    // Setup the subscriptions/etc.\n    // TODO\n\n\n    this.setState(login);\n  }\n\n  updateFromServer(data) {\n    let update = JSON.parse(data);\n    if (update.directive === 'update') {\n      this.setState({config:update.config,meta:update.meta});\n    }\n  }\n\n  updateToServer(data) {\n    this.guiUpdate.publish({data:JSON.stringify(data)})\n  }\n\n  handleUpload = (config) => {\n    console.log(config);\n    this.setState({config:config,showUploader:false})\n    this.updateToServer({directive:'update',config:config})\n    // TODO: update the viewer's base link\n  }\n\n  handleUploadCancel = () => {\n    this.setState({showUploader:false})\n  }\n\n  connect = (prefix,host) => {\n    this.setState({prefix:prefix,host:host});\n    this.ros.connect(prefix+'://'+host);\n  }\n\n  getContent = () => {\n    if (this.state.connected) {\n      return (\n        <SplitPane split='vertical' defaultSize=\"50%\" style={{width: '100%', display:'flex', height:'calc(100vh - 48pt)'}}>\n          <Scene ros={this.ros} baseLink={this.state.config.fixed_frame} urdf={this.state.config.urdf}/>\n          <Main meta={this.state.meta} config={this.state.config} onUpdate={(data)=>this.updateToServer(data)}/>\n        </SplitPane>\n      )\n    } else {\n      return (\n        <Connection host={this.state.host} prefix={this.state.prefix} connect={(prefix,host)=>this.connect(prefix,host)}/>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <>\n      <Layout>\n        <Header style={{ position: 'fixed', zIndex: 1, width: '100%', backgroundColor:'black' }}>\n          <Space align=\"center\">\n            <SettingFilled style={{fontSize:'25pt',textAlign:'center', color:'white',marginRight:5}}/>\n            <span style={{fontSize:'25pt',color:'white'}}>LivelyIK</span>\n          </Space>\n        </Header>\n        <Content style={{ height: 'calc(100vh - 48pt)', backgroundColor: \"#46484d\", marginTop:'48pt', padding:0}}>\n          <div style={{display:'flex',alignItems:'center',justifyContent:'center',height:'calc(100vh - 48pt)'}}>\n            {this.getContent()}\n          </div>\n        </Content>\n        <Sider style={{backgroundColor:\"#81848C\"}} collapsed={this.state.sidebarCollapsed} width=\"30%\" collapsedWidth={0}>Sider</Sider>\n      </Layout>\n      <Uploader visible={this.state.showUploader} onUpload={this.handleUpload} onCancel={this.handleUploadCancel}/>\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/serviceWorker.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Connection.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/ConfigCreator.js",["93"],"import React from 'react';\nimport { Steps, Divider, Button } from 'antd';\nimport Basics from './config/Basics';\nimport Collision from './config/Collision';\nimport Behavior from './config/Behavior';\nconst { Step } = Steps;\n\nclass ConfigCreator extends React.Component {\n\n  state = {step:0};\n\n  updateUrdf = (event) => {\n    this.props.onUpdate({directive:'update',config:{urdf:event.target.value}})\n  }\n\n  updateFixedFrame = (fixedFrame) => {\n    this.props.onUpdate({directive:'update',config:{fixed_frame:fixedFrame}})\n  }\n\n  updateJointNames = (jointNames) => {\n    this.props.onUpdate({directive:'update',config:{joint_names:jointNames}})\n  }\n\n  updateEeFixedJoints = (eeFixedJoints) => {\n    this.props.onUpdate({directive:'update',config:{ee_fixed_joints:eeFixedJoints}})\n  }\n\n  updateJointOrdering = (jointOrdering) => {\n    this.props.onUpdate({directive:'update',config:{joint_ordering:jointOrdering}})\n  }\n\n  updateStates = (states) => {\n    this.props.onUpdate({directive:'update',config:{states:states}})\n  }\n\n  updateStartingConfig = (startingConfig) => {\n    this.props.onUpdate({directive:'update',config:{starting_config:startingConfig}})\n  }\n\n  updateRobotLinkRadius = (radius) => {\n    this.props.onUpdate({directive:'update',config:{robot_link_radius:radius}})\n  }\n\n  updateStaticEnvironment = (staticEnvironment) => {\n    this.props.onUpdate({directive:'update',config:{static_environment:staticEnvironment}})\n  }\n\n  beginPreprocess = () => {\n    //this.props.socket.emit('app_process',{action:'preprocess'})\n  }\n\n  updateObjectives = (objectives) => {\n    this.props.onUpdate({directive:'update',config:{objectives:objectives}})\n  }\n\n  updateGoals = (goals) => {\n    this.props.onUpdate({directive:'update',config:{goals:goals}})\n  }\n\n  updateControlMode = (mode) => {\n    this.props.onUpdate({directive:'update',config:{mode_control:mode}})\n  }\n\n  updateEnvironmentMode = (mode) => {\n    this.props.onUpdate({directive:'update',config:{mode_environment:mode}})\n  }\n\n  updateBaseLinkMotionBounds = (bounds) => {\n    this.props.onUpdate({directive:'update',config:{base_link_motion_bounds:bounds}})\n  }\n\n  updateDisplayedState = (displayedState) => {\n    this.props.onUpdate({directive:'update',meta:{displayed_state:displayedState}})\n  }\n\n  updateToManual = () => {\n    this.props.onUpdate({directive:'update',meta:{control:'manual'}})\n  }\n\n  updateToSolve = () => {\n    this.props.onUpdate({directive:'update',meta:{control:'solve'}})\n  }\n\n  canStep = (desired) => {\n    switch (desired) {\n      case 0:\n        return (this.props.meta.valid_urdf && this.props.meta.valid_robot)\n      case 1:\n        return this.props.meta.valid_nn;\n      case 2:\n        return (this.props.meta.valid_config && this.props.meta.valid_solver)\n    }\n  }\n\n  stepForward = () => {\n    if (this.state.step+1 === 2) {\n      this.updateToSolve()\n    } else {\n      this.updateToManual()\n    }\n    this.setState((state)=>({step:state.step+1}))\n  }\n\n  stepBackward = () => {\n    if (this.state.step-1 === 2) {\n      this.updateToSolve()\n    } else {\n      this.updateToManual()\n    }\n    this.setState((state)=>({step:state.step-1}))\n  }\n\n  getPage = () => {\n    switch (this.state.step) {\n      case 0:\n        return (\n          <Basics meta={this.props.meta}\n                  config={this.props.config}\n                  updateUrdf={(e)=>this.updateUrdf(e)}\n                  updateFixedFrame={(e)=>this.updateFixedFrame(e)}\n                  updateJointNames={(e)=>this.updateJointNames(e)}\n                  updateJointOrdering={(e)=>this.updateJointOrdering(e)}\n                  updateEeFixedJoints={(e)=>this.updateEeFixedJoints(e)}\n                  updateControlMode={(e)=>this.updateControlMode(e)}\n                  updateEnvironmentMode={(e)=>this.updateEnvironmentMode(e)}\n                  />\n        );\n      case 1:\n        return (\n          <Collision meta={this.props.meta}\n                     config={this.props.config}\n                     updateStates={(e)=>this.updateStates(e)}\n                     updateStaticEnvironment={(e)=>this.updateStaticEnvironment(e)}\n                     updateRobotLinkRadius={(e)=>this.updateRobotLinkRadius(e)}\n                     updateDisplayedState={(e)=>this.updateDisplayedState(e)}\n                  />\n        );\n      case 2:\n        return (\n          <Behavior meta={this.props.meta}\n                    config={this.props.config}\n                    updateObjectives={(e)=>this.updateObjectives(e)}\n                    updateGoals={(e)=>this.updateGoals(e)}\n                  />\n        );\n      default:\n        return;\n    }\n  }\n\n  render() {\n    return (\n      <div style={{margin:10}}>\n        <Steps current={this.state.step} size=\"large\">\n          <Step title=\"Basics\" description=\"Specify basic robot configuration\"/>\n          <Step title=\"Collision\" description=\"Specify how the robot may collide\"/>\n          <Step title=\"Behavior\" description=\"Specify how the robot behaves\"/>\n        </Steps>\n        <div style={{margin:20}}>\n          {this.getPage()}\n        </div>\n        <Divider/>\n        <div style={{display:'flex',justifyContent:'space-between'}}>\n          <Button type='primary' disabled={!this.canStep(this.state.step-1)} onClick={this.stepBackward}>Previous</Button>\n          <Button type='primary' disabled={!this.canStep(this.state.step+1)} onClick={this.stepForward}>Next</Button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ConfigCreator\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Commander.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Scene.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Initial.js",[],["94","95"],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Joints.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objectives.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Misc.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Objects.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Collision.js",["96","97","98"],"import React from 'react';\nimport { Form, Slider, Button, Popover, Badge, Collapse, Checkbox, InputNumber, List, Space, Tag } from 'antd';\nconst { Panel } = Collapse;\n\nclass Collision extends React.Component {\n\n  updateDisplayedStateAtIdx = (idx,value) => {\n    console.log(value);\n    let joints = [...this.props.displayedState];\n    joints[idx] = value;\n    this.props.updateDisplayedState(joints);\n  }\n\n  getJointSlider = (idx) => {\n    let minval = +this.props.jointLimits[idx][0].toFixed(2);\n    let maxval = +this.props.jointLimits[idx][1].toFixed(2);\n    // let avgval = +([minval,maxval].reduce((a,b)=>a+b)/2.0).toFixed(2);\n    let marks = {};\n    marks[minval] = minval.toString();\n    marks[maxval] = maxval.toString();\n\n    return (\n      <Form.Item key={this.props.jointOrdering[idx]} label={this.props.jointOrdering[idx]}>\n        <Slider defaultValue={this.props.displayedState[idx]} marks={marks} min={minval} max={maxval} step={0.01} tooltipVisible onChange={(v)=>this.updateDisplayedStateAtIdx(idx,v)}/>\n      </Form.Item>\n    )\n  }\n\n  addToSampleStates = () => {\n    let joints = [...this.props.displayedState];\n    let sampleStates = [...this.props.config.states];\n    sampleStates.push(joints);\n    this.props.updateStates(sampleStates)\n  }\n\n  render() {\n    return (\n      <Collapse defaultActiveKey={['1']} accordion={true}>\n        <Panel header=\"Link Collision\" key=\"1\">\n          <h3>Robot Link Radius</h3>\n          <Space style={{display:'flex',paddingBottom:10}}>\n            <InputNumber min={0} max={10} defaultValue={0.05} step={0.01} onChange={(value)=>this.props.updateRobotLinkRadius(value)} />\n            <Checkbox>Show Link Collision</Checkbox>\n          </Space>\n        </Panel>\n        <Panel header=\"Environment\" key=\"2\">\n          <h3>Spheres</h3>\n          <List header={null} footer={null} bordered dataSource={this.props.config.static_environment.spheres} style={{marginBottom:10}}\n                renderItem={(item)=>(\n                  <List.Item>{item.name}</List.Item>\n                )}\n          />\n          <h3>Cuboids</h3>\n          <List header={null} footer={null} bordered dataSource={this.props.config.static_environment.cuboids}\n                renderItem={(item)=>(\n                  <List.Item>{item.name}</List.Item>\n                )}\n          />\n        </Panel>\n        <Panel header=\"Training States\" key=\"3\">\n          <List header={null} footer={null} bordered dataSource={this.props.config.states}\n                renderItem={(item)=>(\n                  <List.Item onClick={()=>this.props.updateDisplayedState(item)}>\n                    <Space>\n                      {item.map((value)=><Tag>{value.toFixed(2)}</Tag>)}\n                    </Space>\n                  </List.Item>\n                )}\n          />\n        </Panel>\n      </Collapse>\n    )\n  }\n\n}\n\nexport default Collision\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basic.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Preprocessing.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Uploader.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/Main.js",[],"/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Basics.js",["99"],"import React from 'react';\nimport { Input, Descriptions, Select, Modal, Collapse, Button, Badge, Alert, Space } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nconst { Panel } = Collapse;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass Basics extends React.Component {\n\n  state = {urdfWindowVisible:false,};\n\n  openUrdfWindow = () => {\n    this.setState({urdfWindowVisible:true})\n  }\n\n  closeUrdfWindow = () => {\n    this.setState({urdfWindowVisible:false})\n  }\n\n  updateEE = (joint, idx) => {\n    let newJoints = [...this.props.config.ee_fixed_joints];\n    newJoints[idx] = joint;\n    this.props.updateEeFixedJoints(newJoints);\n  }\n\n  changeChain = (chain, idx) => {\n    let jointNames = this.props.config.joint_names;\n    jointNames[idx] = chain\n    this.props.updateJointNames(jointNames)\n  }\n\n  addChain = () => {\n    this.props.updateJointNames([...this.props.config.joint_names,[]]);\n  }\n\n  removeChain = (idx) => {\n    let jointNames = [...this.props.config.joint_names];\n    jointNames.splice(idx,1);\n    this.props.updateJointNames(jointNames)\n  }\n\n  getOptions = (joints) => {\n    return joints.map((joint) => {\n      return (<Option key={joint}>{joint}</Option>)\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Collapse defaultActiveKey={['1']} accordion={true}>\n          <Panel header=\"URDF\" key=\"1\">\n            <h3>URDF</h3>\n            <Space style={{display:'flex',paddingBottom:10}}>\n              <Button onClick={this.openUrdfWindow} size='large'>Update</Button>\n              {this.props.meta.valid_urdf ? (\n                <Alert message=\"Valid\" type=\"success\" showIcon />\n              ) : (\n                <Alert message=\"Invalid\" type=\"error\" showIcon />\n              )}\n            </Space>\n            <h3>Fixed Frame</h3>\n            <Select\n              placeholder=\"Please select a fixed frame\"\n              value={this.props.config.fixed_frame}\n              onChange={(joint)=>this.props.updateFixedFrame(joint)}\n              style={{ width:'100%'}}>\n              {this.props.meta.links.map((joint)=>{\n                return <Option key={joint}>{joint}</Option>\n              })}\n            </Select>\n          </Panel>\n          <Panel header=\"Modes\" key=\"3\">\n            <Space style={{display:'flex'}}>\n              <div>\n                <h3>Control</h3>\n                <Select\n                  placeholder=\"Please select a control mode\"\n                  value={this.props.config.mode_control}\n                  onChange={(mode)=>this.props.updateControlMode(mode)}\n                  style={{ width:'100%'}}>\n                    <Option key='absolute'>Absolute</Option>\n                    <Option key='relative'>Relative</Option>\n                </Select>\n              </div>\n              <div>\n                <h3>Environment</h3>\n                <Select\n                  placeholder=\"Please select an environment mode\"\n                  value={this.props.config.mode_environment}\n                  onChange={(mode)=>this.props.updateEnvironmentMode(mode)}\n                  style={{ width:'100%'}}>\n                    <Option key='ECA'>ECA</Option>\n                    <Option key='ECA3'>ECA3</Option>\n                    <Option key='ECAA'>ECAA</Option>\n                    <Option key='None'>None</Option>\n                </Select>\n              </div>\n            </Space>\n          </Panel>\n          <Panel header=\"Arms and Joints\" key=\"2\">\n            <h3>Joints</h3>\n            <Select\n              mode=\"multiple\"\n              placeholder=\"Please select\"\n              defaultValue={this.props.config.joint_ordering}\n              onChange={(joints)=>this.props.updateJointOrdering(joints)}\n              style={{ width:'100%'}}\n              >\n              {this.getOptions(this.props.meta.dynamic_joints)}\n            </Select>\n            <h3>Chains</h3>\n            {this.props.config.joint_names.map((chain, idx)=>{\n              return (\n              <span style={{display:'flex',marginBottom:10}}>\n                <Select\n                  key={idx}\n                  mode=\"multiple\"\n                  placeholder=\"Please select\"\n                  defaultValue={chain}\n                  onChange={(e)=>this.changeChain(e,idx)}\n                  style={{ width:'100%', flex:3}}\n                  >\n                  {this.getOptions(this.props.config.joint_ordering)}\n                </Select>\n                <Select\n                  showSearch\n                  style={{ width: \"100%\", flex:1, marginLeft:6}}\n                  defaultValue={this.props.config.ee_fixed_joints[idx]}\n                  placeholder=\"EE Fixed Joint\"\n                  optionFilterProp=\"children\"\n                  onChange={(e)=>this.updateEE(e,idx)}\n                >\n                  {this.getOptions(this.props.meta.fixed_joints)}\n                </Select>\n                <Button danger style={{marginLeft:6}} onClick={()=>this.removeChain(idx)} icon={<DeleteOutlined/>}></Button>\n              </span>\n            )})}\n            <Button type='primary' onClick={this.addChain}>Add Chain</Button>\n\n          </Panel>\n        </Collapse>\n        <Modal title=\"Specify URDF\"\n            footer={null}\n            closable={this.props.meta.valid_urdf}\n            visible={this.state.urdfWindowVisible}\n            onCancel={this.closeUrdfWindow}\n            maskClosable={false}\n          >\n          {this.props.meta.valid_urdf ? (\n              <Badge.Ribbon style={{backgroundColor: '#52c41a'}} text='Valid'>\n                <TextArea value={this.props.config.urdf} defaultValue={this.props.config.urdf} rows={10} onChange={this.props.updateUrdf}/>\n              </Badge.Ribbon>\n            ) : (\n              <Badge.Ribbon color='red' text='Invalid'>\n                <TextArea value={this.props.config.urdf} defaultValue={this.props.config.urdf} rows={10} onChange={this.props.updateUrdf}/>\n              </Badge.Ribbon>\n            )\n          }\n\n        </Modal>\n      </>\n    )\n  }\n\n}\n\nexport default Basics\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/components/config/Behavior.js",["100","101","102","103"],"import React from 'react';\nimport { Input, Select, Collapse, List, Tag } from 'antd';\nconst { Panel } = Collapse;\nconst { Option } = Select;\n\nclass Behavior extends React.Component {\n\n  getEENameByIdx = (idx) => {\n    return this.props.config.ee_fixed_joints[idx]\n  }\n\n  getJointNameByIdx = (idx) => {\n    return this.props.config.joint_ordering[idx]\n  }\n\n  getObjectivePreview = (objectiveData) => {\n    switch (objectiveData.objective.variant) {\n      case 'joint_limits':\n        return 'Ensure joints remain within their limits'\n      case 'nn_collision':\n        return 'Ensure robot doesn\\'t collide with the static environment'\n      case 'env_collision':\n        return 'Ensure robot doesn\\'t collide with the dynamic environment'\n      case 'min_velocity':\n        return 'Ensure joints don\\'t move too quickly'\n      case 'min_acceleration':\n        return 'Ensure joints don\\'t accelerate too quickly'\n      case 'min_jerk':\n        return 'Ensure joints don\\'t jerk too quickly'\n      case 'ee_position_match':\n        return <span>\n                <span>Make the </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have a given position</span>\n               </span>\n      case 'ee_orientation_match':\n        return <span>\n                <span>Make the </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have a given rotation</span>\n               </span>\n      case 'joint_match':\n        return <span>\n                <span>Make the </span>\n                <span style={{backgroundColor:'#BE33FF',color:'white',padding:4,borderRadius:5}}>\n                 {this.getJointNameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have a given value</span>\n              </span>\n      case 'ee_position_mirroring':\n        return <span>\n                <span>Match the positions of </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> and </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.secondary_index)}\n                </span>\n               </span>\n      case 'ee_orientation_mirroring':\n        return <span>\n                <span>Match the rotations of </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> and </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.secondary_index)}\n                </span>\n               </span>\n      case 'ee_position_bounding':\n        return <span>\n                <span>Make the position of</span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> stay within a certain range</span>\n               </span>\n      case 'ee_orientation_bounding':\n        return <span>\n                <span>Make the orientation of</span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> stay within a certain range</span>\n               </span>\n      case 'joint_mirroring':\n        return <span>\n                <span>Match the values of </span>\n                <span style={{backgroundColor:'#BE33FF',color:'white',padding:4,borderRadius:5}}>\n                  {this.getJointNameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> and </span>\n                <span style={{backgroundColor:'#BE33FF',color:'white',padding:4,borderRadius:5}}>\n                  {this.getJointNameByIdx(objectiveData.objective.secondary_index)}\n                </span>\n               </span>\n      case 'ee_position_liveliness':\n        return <span>\n                <span>Make the position of </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have lifelike motion</span>\n               </span>\n      case 'ee_orientation_liveliness':\n        return <span>\n                <span>Make the rotation of </span>\n                <span style={{backgroundColor:'#1890ff',color:'white',padding:4,borderRadius:5}}>\n                  {this.getEENameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have lifelike motion</span>\n               </span>\n      case 'joint_liveliness':\n        return <span>\n                <span>Make the value of </span>\n                <span style={{backgroundColor:'#BE33FF',color:'white',padding:4,borderRadius:5}}>\n                  {this.getJointNameByIdx(objectiveData.objective.index)}\n                </span>\n                <span> have lifelike motion</span>\n               </span>\n      case 'base_link_position_liveliness':\n      return <span>\n              <span>Make the robot root </span>\n              <span style={{backgroundColor:'#E73091',color:'white',padding:4,borderRadius:5}}>\n                {this.props.config.fixed_frame}\n              </span>\n              <span> have lifelike motion</span>\n             </span>\n    }\n  }\n\n  getObjectiveEditor = (objectiveData) => {\n\n  }\n\n  getDefaultObjectives = (allObjectives) => {\n    let defaultObjectives = [];\n    allObjectives.forEach((objective,idx)=>{\n      switch (objective.variant) {\n        case 'joint_limits':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        case 'nn_collision':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        case 'env_collision':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        case 'min_velocity':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        case 'min_acceleration':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        case 'min_jerk':\n          defaultObjectives.push({objective:objective,index:idx});\n          break;\n        default:\n          break;\n      }\n    })\n    console.log(defaultObjectives)\n    return defaultObjectives;\n  }\n\n  getDirectionObjectives = (allObjectives) => {\n    let directionObjectives = [];\n    allObjectives.forEach((objective,idx)=>{\n      switch (objective.variant) {\n        case 'ee_position_match':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_orientation_match':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_position_mirroring':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_orientation_mirroring':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_position_bounding':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_orientation_bounding':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'joint_mirroring':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        case 'joint_match':\n          directionObjectives.push({objective:objective,index:idx});\n          break;\n        default:\n          break;\n      }\n    })\n    return directionObjectives;\n  }\n\n  getLivelinessObjectives = (allObjectives) => {\n    let livelinessObjectives = [];\n    allObjectives.forEach((objective,idx)=>{\n      switch (objective.variant) {\n        case 'ee_position_liveliness':\n          livelinessObjectives.push({objective:objective,index:idx});\n          break;\n        case 'ee_orientation_liveliness':\n          livelinessObjectives.push({objective:objective,index:idx});\n          break;\n        case 'joint_liveliness':\n          livelinessObjectives.push({objective:objective,index:idx});\n          break;\n        case 'base_link_position_liveliness':\n          livelinessObjectives.push({objective:objective,index:idx});\n          break;\n        default:\n          break;\n      }\n    })\n    return livelinessObjectives;\n  }\n\n  render() {\n    return (\n      <Collapse defaultActiveKey={['1']} accordion={true}>\n        <Panel header=\"Default\" key=\"1\">\n          <List header={null} footer={null} bordered dataSource={this.getDefaultObjectives(this.props.config.objectives)}\n                style={{overflow:'scroll',maxHeight:300,marginBottom:10}}\n                renderItem={(item)=>(\n                  <List.Item>{this.getObjectivePreview(item)}</List.Item>\n                )}\n          />\n        </Panel>\n        <Panel header=\"Directions\" key=\"2\">\n          <List header={null} footer={null} bordered dataSource={this.getDirectionObjectives(this.props.config.objectives)}\n                style={{overflow:'scroll',maxHeight:300,marginBottom:10}}\n                renderItem={(item)=>(\n                  <List.Item>{this.getObjectivePreview(item)}</List.Item>\n                )}\n          />\n        </Panel>\n        <Panel header=\"Liveliness\" key=\"3\">\n          <List header={null} footer={null} bordered dataSource={this.getLivelinessObjectives(this.props.config.objectives)}\n                style={{overflow:'scroll',maxHeight:300,marginBottom:10}}\n                renderItem={(item)=>(\n                  <List.Item>{this.getObjectivePreview(item)}</List.Item>\n                )}\n          />\n        </Panel>\n      </Collapse>\n    )\n  }\n\n}\n\nexport default Behavior\n","/Users/schoen/ROS/ros2_lik/src/lively_ik/lively_ik_gui/src/util/SimpleTFClient.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":27,"nodeType":"110","messageId":"111","endLine":11,"endColumn":32},{"ruleId":"108","severity":1,"message":"112","line":11,"column":34,"nodeType":"110","messageId":"111","endLine":11,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":85,"column":5,"nodeType":"115","messageId":"116","endLine":92,"endColumn":6},{"ruleId":"104","replacedBy":"117"},{"ruleId":"106","replacedBy":"118"},{"ruleId":"108","severity":1,"message":"119","line":2,"column":24,"nodeType":"110","messageId":"111","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"120","line":2,"column":32,"nodeType":"110","messageId":"111","endLine":2,"endColumn":39},{"ruleId":"108","severity":1,"message":"121","line":2,"column":41,"nodeType":"110","messageId":"111","endLine":2,"endColumn":46},{"ruleId":"108","severity":1,"message":"122","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"108","severity":1,"message":"123","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":15},{"ruleId":"108","severity":1,"message":"124","line":2,"column":41,"nodeType":"110","messageId":"111","endLine":2,"endColumn":44},{"ruleId":"108","severity":1,"message":"125","line":4,"column":9,"nodeType":"110","messageId":"111","endLine":4,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":17,"column":5,"nodeType":"115","messageId":"116","endLine":135,"endColumn":6},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Empty' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["126"],["127"],"'Button' is defined but never used.","'Popover' is defined but never used.","'Badge' is defined but never used.","'Descriptions' is defined but never used.","'Input' is defined but never used.","'Tag' is defined but never used.","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]